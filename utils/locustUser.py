#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/3/14# @Author : cyq# @File : locustUser# @Software: PyCharm# @Desc:from json import JSONDecodeErrorfrom locust import HttpUser, task,FastHttpUserclass DynamicApiUser(FastHttpUser):    api_info = {}    method: str    url: str    @task    def invoke(self):        with getattr(self.client, self.method)(self.url, **self.api_info, catch_response=True) as response:            try:                if response.json().get('code') != 0:                    response.failure("code != 0")                else:                    response.success()            except JSONDecodeError:                response.failure("Response could not be decoded as JSON")            except KeyError:                response.failure("Response did not contain expected key ")            except Exception as e:                response.failure(e)class DebuggerUser(HttpUser):    api_info = {}    method: str    url: str    @task    def invoke(self):        with getattr(self.client, self.method)(self.url, **self.api_info, catch_response=True) as response:            pass