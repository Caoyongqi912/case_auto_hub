#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2024/6/15# @Author : cyq# @File : redis_# @Software: PyCharm# @Desc:from redis import ConnectionPool, StrictRedisfrom config import Configclass RedisClient:    _cluster_pool = dict()    _pool = dict()    _db: int    @staticmethod    def client(db: int = Config.REDIS_DB):        pool = ConnectionPool(host=Config.REDIS_SERVER,                              port=Config.REDIS_PORT,                              password=Config.REDIS_PASSWORD,                              db=db,                              max_connections=100,                              decode_responses=True)        return StrictRedis(connection_pool=pool, decode_responses=True)class RedisManager:    _redis_client: StrictRedis = RedisClient.client()    _cluster_pool = dict()    _pool = dict()    @staticmethod    def get_keys(key: str):        val = RedisManager._redis_client.hgetall(key)        return valif __name__ == '__main__':    # asyncio.run(RedisManager.get_key())    v = RedisManager().get_keys("pro_user")    print(v)