#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2024/11/26# @Author : cyq# @File : interfaceResultModel# @Software: PyCharm# @Desc:from sqlalchemy import Column, INTEGER, String, ForeignKey, TEXT, JSON, DATETIMEfrom datetime import datetimefrom app.model import BaseModelclass InterfaceResultModel(BaseModel):    __tablename__ = 'interface_result'    interfaceID = Column(INTEGER, ForeignKey('interface.id', ondelete='CASCADE'), comment="所属用例")    interfaceName = Column(String(20), comment="用例名称")    interfaceUid = Column(String(20), comment="用例Uid")    interfaceDesc = Column(String(50), comment="用例描述")    interfaceLog = Column(TEXT, nullable=True, comment="运行日志")    startTime = Column(DATETIME, default=datetime.now, comment="开始时间")    useTime = Column(DATETIME, nullable=True, comment="用时")    response_txt = Column(TEXT, nullable=True, comment="响应报文")    response_status = Column(INTEGER, comment="响应Code")    response_head = Column(JSON, nullable=True, comment="响应头")    request_head = Column(JSON, nullable=True, comment="请求头")    request_txt = Column(TEXT, nullable=True, comment="请求报文")    request_vars = Column(JSON, nullable=True, comment="请求变量")    assert_info = Column(JSON, nullable=True, comment="断言信息")    starterId = Column(INTEGER, comment="运行人ID")    starterName = Column(String(20), comment="运行人姓名")    result = Column(String(10), nullable=False, comment="运行结果")    def __repr__(self):        return f"<InterfaceResul(id={self.id}, interfaceID={self.interfaceID}, interfaceName={self.interfaceName}, status={self.status} result={self.result})>"