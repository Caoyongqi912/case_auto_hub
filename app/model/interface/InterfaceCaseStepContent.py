#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/5/30# @Author : cyq# @File : InterfaceCaseStepContent# @Software: PyCharm# @Desc:import enumsfrom sqlalchemy import Column, String, INTEGER, ForeignKey, TEXTfrom app.model import BaseModelfrom enums.CaseEnum import CaseStepContentTypeclass InterfaceCaseStepContent(BaseModel):    """    业务用例 步骤 表    """    __tablename__ = "interface_case_step_content"    content_name = Column(String(250), nullable=True, comment="步骤名称")    content_desc = Column(String(250), nullable=True, comment="步骤描述")    content_type = Column(INTEGER, default=CaseStepContentType.STEP_API, nullable=False, comment="步骤类型")    target_id = Column(INTEGER, nullable=True, comment="接口id")    enable = Column(INTEGER, default=1, nullable=False, comment="是否启用")    def __repr__(self):        return f"<CaseStepContent(id={self.id}, content_name={self.content_name}, content_desc={self.content_desc}, content_type={self.content_type}, target_id={self.target_id}, enable={self.enable})>"    def __str__(self):        return f"STEP  [\"{self.content_name}\"  \"{self.content_desc}\"]"class InterfaceCondition(BaseModel):    """    接口条件    # 一个伪装 代理 的api 啥也不干 指向 Condition    Interface is_condition  &&  condition.id =>  id    Condition 表与 Interface 表 多对多关系  interface_condition_association    interface_condition <==> Interface    """    __tablename__ = 'interface_condition'    condition_key = Column(String(40), nullable=True, comment="条件key")    condition_value = Column(String(40), nullable=True, comment="条件value")    condition_operator = Column(INTEGER, nullable=True, comment="比较")    condition_step_num = Column(INTEGER, default=0, comment="步骤数")    def __repr__(self):        return f"<InterfaceCondition(id={self.id}, condition_key={self.condition_key} condition_value={self.condition_value} condition_operator={self.condition_operator})>"class InterfaceGroupModel(BaseModel):    """    接口表    """    __tablename__ = 'interface_group'    name = Column(String(40), nullable=False, comment="组名称")    description = Column(String(40), nullable=False, comment="组描述")    api_num = Column(INTEGER, nullable=False, default=0, comment="接口数量")    module_id = Column(INTEGER, nullable=True, comment="所属模块")    project_id = Column(INTEGER, ForeignKey("project.id", ondelete='set null'), nullable=True,                        comment="所属产品")    def __repr__(self):        return f"<InterfaceGroup (id={self.id}, name={self.name}, description={self.description}, module_id={self.module_id}, project_id={self.project_id})>"