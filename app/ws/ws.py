#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2024/12/5# @Author : cyq# @File : ws# @Software: PyCharm# @Desc:from fastapi import WebSocketfrom utils import MyLogurulog = MyLoguru().get_logger()class ConnectionManager:    def __init__(self):        self.active_connections: dict[str, WebSocket] = {}    async def connect(self, websocket: WebSocket, client_id: str):        ws =  await websocket.accept()        self.active_connections[client_id] = ws        log.debug(f"websocket client_state: {websocket.client_state}")        log.debug(f"websocket state: {websocket.state}")        log.info(f"websocket {client_id} connected")    def disconnect(self, client_id: str):        if client_id in self.active_connections:            del self.active_connections[client_id]            log.info(f"websocket {client_id} disconnected")    async def send_personal_message(self, message: str, client_id: str):        log.debug(f"websocket active_connections {self.active_connections} ")        websocket = self.active_connections.get(client_id)        try:            if websocket:                await websocket.send_text(message)        except Exception as e:            log.error(e)            self.disconnect(client_id)