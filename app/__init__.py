#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2024/6/6# @Author : cyq# @File : __init__.py# @Software: PyCharm# @Desc:from fastapi import FastAPI,WebSocket,WebSocketDisconnectfrom fastapi.exceptions import RequestValidationErrorfrom starlette.middleware.base import BaseHTTPMiddlewarefrom starlette.middleware.errors import ServerErrorMiddlewarefrom starlette.middleware.cors import CORSMiddlewarefrom app.middware import CORS_ALLOW_ORIGINS, req_middleware, error_middleware,validation_exception_handlerfrom app.controller import RegisterRouterListfrom app.ws.ws import managerfrom fastapi_socketio import SocketManagerapp = FastAPI(    title="CaseAutoHub")# 加载路由for item in RegisterRouterList:    app.include_router(item.router)# 参数校验捕获app.add_exception_handler(    RequestValidationError,    handler=validation_exception_handler,)# 跨域app.add_middleware(    CORSMiddleware,    **CORS_ALLOW_ORIGINS)# 请求日志app.add_middleware(    BaseHTTPMiddleware,    dispatch=req_middleware,)# 全局异常捕获app.add_middleware(    ServerErrorMiddleware,    handler=error_middleware,)socket_manager = SocketManager(app=app, mount_location="/ws")@socket_manager.on('connect',namespace="/ws")async def connect(sid, environ):    print(sid)    print(environ)@app.websocket("/ws/{client_id}")async def websocket_endpoint(websocket: WebSocket, client_id: str):    try:        await manager.connect(websocket, client_id)        for i in range(10):            await websocket.send_text(f"hi {i}")        #  await manager.send_personal_message(f"You", websocket)    except WebSocketDisconnect:        manager.disconnect(websocket)