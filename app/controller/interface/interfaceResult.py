#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2024/11/20# @Author : cyq# @File : interfaceResult# @Software: PyCharm# @Desc:from fastapi import APIRouterfrom fastapi.params import Dependsfrom app.controller import Authenticationfrom app.mapper.interface.interfaceResultMapper import InterfaceCaseResultMapperfrom app.response import Responsefrom app.mapper.interface import InterfaceResultMapper, InterfaceTaskResultMapper, InterfaceMapperfrom app.schema.interface import InterfaceCaseResultFieldSchema, InterfaceResultFieldSchema, \    PageInterfaceCaseResultFieldSchema, RemoveAllCaseResult, InterfaceTaskResultDetailSchema, PageInterfaceApiSchema, \    PageInterfaceApiResultFieldSchema, GetByTaskIdfrom utils import logrouter = APIRouter(prefix="/interface/result", tags=['自动化接口接结果'])@router.get("/detail", description="获取结果详情")async def detail_interface_api_result(detailId: int, _=Depends(Authentication())):    detail = await InterfaceResultMapper.get_by_id(detailId)    return Response.success(detail)@router.post("/queryBy", description="查询")async def query_interface_api_result(queryBy: InterfaceResultFieldSchema, _=Depends(Authentication())):    log.debug(queryBy)    results = await InterfaceResultMapper.query_by(**queryBy.dict(        exclude_unset=True,        exclude_none=True,    ))    return Response.success(results)@router.post("/case/queryBy", description="查询用例结果")async def case_interface_api_results(byInfo: InterfaceCaseResultFieldSchema, _=Depends(Authentication())):    results = await InterfaceCaseResultMapper.query_by(**byInfo.dict(        exclude_unset=True,        exclude_none=True,    ))    return Response.success(results)@router.get("/case/detail/{uid}", description="查询用例结果")async def case_interface_api_result(uid: int, _=Depends(Authentication())):    res = await InterfaceCaseResultMapper.get_by_id(uid)    return Response.success(res)@router.post("/case/remove", description="删除单个用例结果")async def remove_case_interface_api_result(result: InterfaceCaseResultFieldSchema, _=Depends(Authentication())):    await InterfaceCaseResultMapper.delete_by_uid(result.uid)    return Response.success()@router.post("/case/removeAll", description="删除全部用例结果")async def remove_all_case_interface_api_result(result: RemoveAllCaseResult, _=Depends(Authentication())):    await InterfaceCaseResultMapper.delete_by_caseId(caseId=result.interfaceCaseID)    return Response.success()@router.post("/case/page", description="用例case结果分页")async def case_interface_page_results_page(pageinfo: PageInterfaceCaseResultFieldSchema, _=Depends(Authentication)):    pages = await InterfaceCaseResultMapper.page_query(**pageinfo.dict(        exclude_unset=True,        exclude_none=True,    ))    return Response.success(pages)@router.post("/inter/page", description="用例api结果分页")async def api_interface_page_results_page(pageinfo: PageInterfaceApiResultFieldSchema, _=Depends(Authentication)):    pages = await InterfaceResultMapper.page_query(**pageinfo.dict(        exclude_unset=True,        exclude_none=True,    ))    return Response.success(pages)@router.get("/task/resultDetail", description="任务详情")async def get_task_detail_result(result: InterfaceTaskResultDetailSchema = Depends(), _=Depends(Authentication())):    detail = await InterfaceTaskResultMapper.get_by_id(ident=result.resultId)    return Response.success(detail)@router.post("/task/removeAll", description="删除全部用例结果")async def remove_all_case_interface_api_result(result: GetByTaskId, _=Depends(Authentication())):    await InterfaceTaskResultMapper.delete_by_taskId(taskId=result.taskId)    return Response.success()