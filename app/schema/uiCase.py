#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2024/6/21# @Author : cyq# @File : uiCase# @Software: PyCharm# @Desc:import enumfrom typing import List, Mapping, Anyfrom pydantic import BaseModelfrom app.schema.baseSchema import PageSchemafrom enums.CaseEnum import CaseStatus, CaseLevelfrom utils import GenerateToolsclass AddUICaseStepSql(BaseModel):    sql_str: str    stepId: int    b_or_a: int    desc: str | None    creator: int | Noneclass UpdateUICaseStepSql(BaseModel):    uid: str    sql_str: str | None    stepId: int | None    b_or_a: int | None    desc: str | None    creator: int | Noneclass AddUICaseStepApi(BaseModel):    b_or_a: int    name: str    desc: str | None    url: str    method: str    stepId: int    go_on: int = 1    extracts: List[Mapping[str, Any] | None] | None    params: List[Mapping[str, Any] | None] | None    asserts: List[Mapping[str, Any] | None] | None    body: Mapping[str, Any] | None    bodyType: int = 0    creator: int | Noneclass DeleteUICaseStepApi(BaseModel):    uid: strclass UpdateUICaseStepApi(BaseModel):    uid: str    b_or_a: int | None    go_on: int | None    name: str | None    desc: str | None    url: str | None    method: str | None    stepId: int | None    extracts: List[Mapping[str, Any] | None] | None    params: List[Mapping[str, Any] | None] | None    asserts: List[Mapping[str, Any] | None] | None    body: Mapping[str, Any] | None    bodyType: int | None    creator: int | Noneclass DateTimeField(enum.Enum):    DAY = "day"    WEEK = "week"    MONTH = "month"    YEAR = "year"class UICaseField(BaseModel):    id: int | None    title: str | None    uid: str | None    casePartId: int | None    projectId: int | None    creator: int | None    creatorName: str | None    status: CaseStatus | None    level: CaseLevel | None    envId: str | None    envName: str | Noneclass UISearchByDate(BaseModel):    projectId: int    st: str | None = GenerateTools.getMonthFirst(),    et: str | None = GenerateTools.getTime(2)class GetOrDeleteUICaeVariable(BaseModel):    uid: strclass InsertUICaseVariable(BaseModel):    key: str    value: str    caseId: int    creator: intclass UpdateUICaseVariable(BaseModel):    uid: str    key: str | None    value: str | None    updater: int | Noneclass UICasePage(PageSchema, UICaseField):    sort: dict | Noneclass UIVariablesPage(PageSchema):    caseId: intclass RunUITaskByJK(BaseModel):    taskIds: List[int]    userId: int    jobName: str | None = Noneclass AddUICaseStepWithGroup(BaseModel):    caseId: int    groupIds: List[int]