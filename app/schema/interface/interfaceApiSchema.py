#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2024/11/20# @Author : cyq# @File : interfaceApiSchema# @Software: PyCharm# @Desc:from app.schema import BaseSchema, PageSchemafrom pydantic import BaseModel, Field, validatorfrom typing import List, Dict, Any, Literalfrom enums.ModuleEnum import ModuleEnumfrom typing import List, Dict, Any, Literalfrom pydantic import BaseModel, Field, validatorclass IItem(BaseModel):    """    headers 等的结构定义    """    id: int|str = Field(..., description=" id")    key: str = Field(..., description="键", title="Key")    value: str = Field(..., description="值")    desc: str | None = Field(None, description="描述")class IAssert(BaseModel):    """    断言    """    id: int = Field(..., description=" id")    assertOpt: str = Field(..., description="断言")    expect: str = Field(..., description="预期")    extraValue: str = Field(..., description="预期值")    extraValueType: str = Field(..., description="值")    extraOpt: str = Field(..., description="类型")    desc: str | None = Field(None, description="描述")class InterfaceApiFieldSchema(BaseModel):    """    接口步骤字段    """    # 基本信息    id: int | None = None    uid: str | None = None    name: str | None = None    description: str | None = None    method: Literal["GET", "POST", "PUT", "DELETE"] = Field(default="GET", description="请求方法")    status: str | None = None    level: str | None = None    # 请求    url: str | None = None    headers: List[IItem] | None = None    params: List[IItem] | None = None    data: List[IItem] | None = None    extracts: List[IItem] | None = None    asserts: List[IAssert] | None = None    body: Dict[str, Any] | None = None    # 超时设置    connect_timeout: int = Field(default=6, description="连接超时时间（秒）")    response_timeout: int = Field(default=6, description="响应超时时间（秒）")    before_script: str | None = None    before_db_id: int | None = None    before_sql: str | None = None    before_sql_extracts: List[IItem] | None = None    before_params: List[IItem] | None = None    after_script: str | None = None    project_id: int | None = None    env_id: int | None = None    module_id: int | None = None    body_type: int | None = None    follow_redirects: int | None = None    is_common: int | None = None    enable: bool | None = None    is_group: bool | None = None    group_id: int | None = None    creator: int | None = None    creatorName: str | None = Noneclass SaveRecordSchema(BaseModel):    name: str    is_common: int = 1    module_id: int    project_id: int    status: str | None = None    level: str | None = None    recordId: strclass SaveRecordToCaseSchema(BaseModel):    recordId: str    caseId: intclass SetInterfacesModuleSchema(BaseModel):    module_id: int    interfaces: List[int]class AddInterfaceApiSchema(InterfaceApiFieldSchema):    name: str    description: str    method: str    url: str    project_id: int    module_id: int = Field(ModuleEnum.API, description="模块类型")    status: str    level: str    body_type: int = 0    follow_redirects: int = 0    is_common: int = 1class TryScriptSchema(BaseModel):    script: strclass UploadApiSchema(BaseModel):    valueType: intclass UpdateInterfaceApiSchema(InterfaceApiFieldSchema):    id: intclass RemoveInterfaceApiSchema(BaseModel):    id: intclass CopyInterfaceApiSchema(BaseModel):    id: intclass CurlSchema(BaseModel):    script: strclass TryAddInterfaceApiSchema(InterfaceApiFieldSchema):    interfaceId: intclass PageInterfaceApiSchema(InterfaceApiFieldSchema, PageSchema):    module_type: int = ModuleEnum.APIclass RecordingSchema(BaseModel):    url: str | None = ""    method: List[str] | Noneclass PerfSchema(BaseModel):    interfaceId: int    perf_user: int    perf_duration: float    perf_spawn_rate: int__all__ = [    "PerfSchema",    "RecordingSchema",    "TryScriptSchema",    "CopyInterfaceApiSchema",    "AddInterfaceApiSchema",    "TryAddInterfaceApiSchema",    "PageInterfaceApiSchema",    "InterfaceApiFieldSchema",    "UpdateInterfaceApiSchema",    "RemoveInterfaceApiSchema",    "SetInterfacesModuleSchema",    "CurlSchema"]