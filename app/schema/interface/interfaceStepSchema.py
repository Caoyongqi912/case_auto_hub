#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2024/11/20# @Author : cyq# @File : interfaceStepSchema# @Software: PyCharm# @Desc:from app.schema import BaseSchema, PageSchemafrom pydantic import BaseModel, Field, validatorfrom typing import List, Dict, Any, Literalclass InterfaceStepFieldSchema(BaseModel):    """    接口步骤字段    """    id: int | None = None    uid: str | None = None    name: str | None = None    desc: str | None = None    method: Literal["GET", 'POST', 'PUT', "DELETE"] = Field(default="GET", description="请求方法")    url: str | None = None    headers: List[Dict[str, Any]] | None = None    params: List[Dict[str, Any]] | None = None    body: Dict[str, Any] | None = None    data: List[Dict[str, Any]] | None = None    asserts: List[Dict[str, Any]] | None = None    extracts: List[Dict[str, Any]] | None = None    project_id: int | None = None    connectTimeout: int | None = 6000    responseTimeout: int | None = 6000    beforeScript: str | None = None    afterScript: str | None = None    beforeParams: List[Dict[str, Any]] | None = None    env_id: int | None = Noneclass AddInterfaceStepSchema(InterfaceStepFieldSchema):    name: str    desc: str    method: str    url: str    project_id: int    env_id: int    @validator("name", "desc")    def not_empty(cls, v):        return BaseSchema.not_empty(v)class UpdateInterfaceStepSchema(InterfaceStepFieldSchema):    id: intclass RemoveInterfaceStepSchema(InterfaceStepFieldSchema):    id: intclass TryAddInterfaceStepSchema(InterfaceStepFieldSchema):    id: intclass PageInterfaceStepSchema(InterfaceStepFieldSchema, PageSchema):    ...__all__ = [    "AddInterfaceStepSchema",    "TryAddInterfaceStepSchema",    "PageInterfaceStepSchema",    "InterfaceStepFieldSchema",    "UpdateInterfaceStepSchema",    "RemoveInterfaceStepSchema"]