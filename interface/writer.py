#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2024/11/26# @Author : cyq# @File : writer# @Software: PyCharm# @Desc:from typing import Mapping, AnyStr, Any, Listfrom httpx import Responsefrom app.mapper.interface import InterfaceMapper, InterfaceResultMapperfrom app.model.base import Userfrom app.model.interface import InterfaceModelfrom enums import InterfaceAPIResultEnumfrom utils import MyLogurulog = MyLoguru().get_logger()class InterfaceAPIWriter:    @staticmethod    async def writer_interface_result(            starter: User,            interface: InterfaceModel,            response: Response = None,            no_db: bool = True,            asserts: List[Mapping[str, Any]] = None,            variables: Mapping = None) -> Mapping[str, Any] | None:        """        写结果        :param no_db: 是否写入DB        :param starter： 执行人        :param interface: 接口实体        :param response: 响应结果对象        :param variables: 变量        :param asserts:断言信息        """        _interfaceBaseInfo = dict(            interfaceID=interface.id,            interfaceName=interface.name,            interfaceUid=interface.uid,            interfaceDesc=interface.desc,            starterId=starter.id,            starterName=starter.username,        )        _response = dict()        if not response:            _response['response_status'] = 500            _response['response_txt'] = "ConnectError"            _response['result'] = InterfaceAPIResultEnum.FAIL        else:            _response['response_status'] = response.status_code            _response['response_txt'] = response.text            _response['response_head'] = dict(response.headers)            _response['request_head'] = dict(response.request.headers)            _response['useTime'] = response.elapsed.total_seconds()        _response['asserts'] = asserts        _response['result'] = InterfaceAPIResultEnum.SUCCESS        for i in asserts:            log.info(i)            if i['result'] is False:                _response['result'] = InterfaceAPIResultEnum.ERROR                break        log.debug(_response)        if not no_db:            await InterfaceResultMapper.set_result(**_interfaceBaseInfo,                                                   **_response)        else:            return {**_interfaceBaseInfo, **_response}